
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'cuerpoleftORORleftANDANDleftIGUALIGUALDIFIGUALleftMAYORIGUALMENORIGUALMAYORMENORleftSUMARESTAleftMULTDIVMODANDAND ARROW BOOLEAN B_COMMENTARIO CASE COMA COMILLA_D COMILLA_S COMMENTARIO CORCHETE_DER CORCHETE_IZ DEF DIF DIFIGUAL DIV DO EACH ELSE ELSEIF END FALSE FLOAT FOR GETS ID IF IGUAL IGUALIGUAL IN INTEGER INTERPOLACION INTERROGACION LLAVE_DER LLAVE_IZ MASIGUAL MAYOR MAYORIGUAL MENOR MENORIGUAL MENOSIGUAL MOD MULT NEW NIL OROR PARENTESIS_DER PARENTESIS_IZ PIPE PRINT PUNTO PUTS Q_CORCHETES Q_LLAVES Q_OTROS Q_PARENTESIS REGEX_SLASH RESTA RETURN R_LLAVES R_OTROS SET STRING SUMA TRUE UNTIL WHILEcuerpo : linea\n| linea cuerpolinea : impresion\n| asignacion\n| expresion\n| declaracion_array\n| acceso_array\n| declaracion_hash\n| for_statement\n| while_statement\n| set_statement\n| gets\n| funcion_definition\n| if_statement\n| ifelse_statementimpresion : PUTS expresion\n| PRINT expresionasignacion : ID IGUAL expresionasignacion : ID MASIGUAL expresionasignacion : ID MENOSIGUAL expresiondeclaracion_array : ID IGUAL CORCHETE_IZ elementos CORCHETE_DERacceso_array : ID CORCHETE_IZ expresion CORCHETE_DERdeclaracion_hash : ID IGUAL LLAVE_IZ pares_hash LLAVE_DERpares_hash : par_hash\n| par_hash COMA pares_hashpar_hash : STRING ARROW expresionfor_statement : FOR ID IN expresion cuerpo ENDwhile_statement : WHILE expresion cuerpo ENDexpresion : set_statementset_statement : SET PUNTO NEW PARENTESIS_IZ CORCHETE_IZ elementos CORCHETE_DER PARENTESIS_DERgets : GETS IDfuncion_definition : DEF ID PARENTESIS_IZ parametros PARENTESIS_DER cuerpo ENDexpresion : ID PARENTESIS_IZ argumentos_opt PARENTESIS_DERargumentos_opt :  \n| argumentosargumentos : expresion\n| expresion COMA argumentosif_statement : IF expresion cuerpo ENDifelse_statement : IF expresion cuerpo ELSE cuerpo ENDparametros : parametro\n| parametro COMA parametrosparametro : IDelementos : expresion\n| expresion COMA elementosexpresion : expresion SUMA expresion\n| expresion RESTA expresion\n| expresion MULT expresion\n| expresion DIV expresion\n| expresion MOD expresionexpresion : expresion MAYOR expresion\n| expresion MENOR expresion\n| expresion MAYORIGUAL expresion\n| expresion MENORIGUAL expresion\n| expresion IGUALIGUAL expresion\n| expresion DIFIGUAL expresion\n| expresion ANDAND expresion\n| expresion OROR  expresionexpresion : PARENTESIS_IZ expresion PARENTESIS_DERexpresion : INTEGERexpresion : FLOATexpresion : IDexpresion : STRINGexpresion : BOOLEANexpresion : TRUE\n| FALSElinea : RETURN expresion'
    
_lr_action_items = {'RETURN':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,19,21,22,23,24,25,26,47,48,49,50,51,59,61,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,80,81,86,97,99,100,101,106,107,108,110,116,122,126,128,129,],[16,16,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-61,-59,-60,-62,-63,-64,-65,-66,-29,-61,-16,-17,16,-31,16,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-18,-19,-20,-58,-33,-22,16,-28,-38,16,-21,-23,16,-27,-39,-32,-30,]),'PUTS':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,19,21,22,23,24,25,26,47,48,49,50,51,59,61,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,80,81,86,97,99,100,101,106,107,108,110,116,122,126,128,129,],[17,17,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-61,-59,-60,-62,-63,-64,-65,-66,-29,-61,-16,-17,17,-31,17,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-18,-19,-20,-58,-33,-22,17,-28,-38,17,-21,-23,17,-27,-39,-32,-30,]),'PRINT':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,19,21,22,23,24,25,26,47,48,49,50,51,59,61,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,80,81,86,97,99,100,101,106,107,108,110,116,122,126,128,129,],[18,18,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-61,-59,-60,-62,-63,-64,-65,-66,-29,-61,-16,-17,18,-31,18,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-18,-19,-20,-58,-33,-22,18,-28,-38,18,-21,-23,18,-27,-39,-32,-30,]),'ID':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,30,31,32,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,59,61,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,80,81,86,87,90,97,98,99,100,101,106,107,108,109,110,112,115,116,117,122,126,128,129,],[19,19,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,49,49,49,-61,49,-59,-60,-62,-63,-64,-65,58,49,61,62,49,49,49,49,49,49,49,49,49,49,49,49,49,49,-66,-29,-61,-16,-17,49,49,49,49,49,19,-31,19,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-18,49,-19,-20,-58,49,103,-33,49,-22,19,-28,-38,19,-21,49,-23,49,49,19,103,-27,-39,-32,-30,]),'PARENTESIS_IZ':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,28,32,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,59,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,80,81,86,87,89,97,98,99,100,101,106,107,108,109,110,112,115,116,122,126,128,129,],[20,20,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,20,20,20,55,20,-59,-60,-62,-63,-64,-65,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,-66,-29,55,-16,-17,20,20,20,20,20,20,-31,90,20,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-18,20,-19,-20,-58,20,102,-33,20,-22,20,-28,-38,20,-21,20,-23,20,20,20,-27,-39,-32,-30,]),'INTEGER':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,28,32,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,59,61,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,80,81,86,87,97,98,99,100,101,106,107,108,109,110,112,115,116,122,126,128,129,],[21,21,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,21,21,21,-61,21,-59,-60,-62,-63,-64,-65,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,-66,-29,-61,-16,-17,21,21,21,21,21,21,-31,21,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-18,21,-19,-20,-58,21,-33,21,-22,21,-28,-38,21,-21,21,-23,21,21,21,-27,-39,-32,-30,]),'FLOAT':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,28,32,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,59,61,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,80,81,86,87,97,98,99,100,101,106,107,108,109,110,112,115,116,122,126,128,129,],[22,22,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,22,22,22,-61,22,-59,-60,-62,-63,-64,-65,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,-66,-29,-61,-16,-17,22,22,22,22,22,22,-31,22,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-18,22,-19,-20,-58,22,-33,22,-22,22,-28,-38,22,-21,22,-23,22,22,22,-27,-39,-32,-30,]),'STRING':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,28,32,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,59,61,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,86,87,97,98,99,100,101,106,107,108,109,110,111,112,115,116,122,126,128,129,],[23,23,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,23,23,23,-61,23,-59,-60,-62,-63,-64,-65,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,-66,-29,-61,-16,-17,23,23,23,23,23,23,-31,23,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-18,23,96,-19,-20,-58,23,-33,23,-22,23,-28,-38,23,-21,23,-23,96,23,23,23,-27,-39,-32,-30,]),'BOOLEAN':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,28,32,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,59,61,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,80,81,86,87,97,98,99,100,101,106,107,108,109,110,112,115,116,122,126,128,129,],[24,24,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,24,24,24,-61,24,-59,-60,-62,-63,-64,-65,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,-66,-29,-61,-16,-17,24,24,24,24,24,24,-31,24,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-18,24,-19,-20,-58,24,-33,24,-22,24,-28,-38,24,-21,24,-23,24,24,24,-27,-39,-32,-30,]),'TRUE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,28,32,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,59,61,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,80,81,86,87,97,98,99,100,101,106,107,108,109,110,112,115,116,122,126,128,129,],[25,25,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,25,25,25,-61,25,-59,-60,-62,-63,-64,-65,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,-66,-29,-61,-16,-17,25,25,25,25,25,25,-31,25,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-18,25,-19,-20,-58,25,-33,25,-22,25,-28,-38,25,-21,25,-23,25,25,25,-27,-39,-32,-30,]),'FALSE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,28,32,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,59,61,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,80,81,86,87,97,98,99,100,101,106,107,108,109,110,112,115,116,122,126,128,129,],[26,26,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,26,26,26,-61,26,-59,-60,-62,-63,-64,-65,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,-66,-29,-61,-16,-17,26,26,26,26,26,26,-31,26,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-18,26,-19,-20,-58,26,-33,26,-22,26,-28,-38,26,-21,26,-23,26,26,26,-27,-39,-32,-30,]),'FOR':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,19,21,22,23,24,25,26,47,48,49,50,51,59,61,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,80,81,86,97,99,100,101,106,107,108,110,116,122,126,128,129,],[27,27,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-61,-59,-60,-62,-63,-64,-65,-66,-29,-61,-16,-17,27,-31,27,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-18,-19,-20,-58,-33,-22,27,-28,-38,27,-21,-23,27,-27,-39,-32,-30,]),'WHILE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,19,21,22,23,24,25,26,47,48,49,50,51,59,61,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,80,81,86,97,99,100,101,106,107,108,110,116,122,126,128,129,],[28,28,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-61,-59,-60,-62,-63,-64,-65,-66,-29,-61,-16,-17,28,-31,28,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-18,-19,-20,-58,-33,-22,28,-28,-38,28,-21,-23,28,-27,-39,-32,-30,]),'SET':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,28,32,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,59,61,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,80,81,86,87,97,98,99,100,101,106,107,108,109,110,112,115,116,122,126,128,129,],[29,29,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,29,29,29,-61,29,-59,-60,-62,-63,-64,-65,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,-66,-29,-61,-16,-17,29,29,29,29,29,29,-31,29,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-18,29,-19,-20,-58,29,-33,29,-22,29,-28,-38,29,-21,29,-23,29,29,29,-27,-39,-32,-30,]),'GETS':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,19,21,22,23,24,25,26,47,48,49,50,51,59,61,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,80,81,86,97,99,100,101,106,107,108,110,116,122,126,128,129,],[30,30,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-61,-59,-60,-62,-63,-64,-65,-66,-29,-61,-16,-17,30,-31,30,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-18,-19,-20,-58,-33,-22,30,-28,-38,30,-21,-23,30,-27,-39,-32,-30,]),'DEF':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,19,21,22,23,24,25,26,47,48,49,50,51,59,61,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,80,81,86,97,99,100,101,106,107,108,110,116,122,126,128,129,],[31,31,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-61,-59,-60,-62,-63,-64,-65,-66,-29,-61,-16,-17,31,-31,31,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-18,-19,-20,-58,-33,-22,31,-28,-38,31,-21,-23,31,-27,-39,-32,-30,]),'IF':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,19,21,22,23,24,25,26,47,48,49,50,51,59,61,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,80,81,86,97,99,100,101,106,107,108,110,116,122,126,128,129,],[32,32,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-61,-59,-60,-62,-63,-64,-65,-66,-29,-61,-16,-17,32,-31,32,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-18,-19,-20,-58,-33,-22,32,-28,-38,32,-21,-23,32,-27,-39,-32,-30,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,19,21,22,23,24,25,26,33,47,48,49,50,51,61,64,65,66,67,68,69,70,71,72,73,74,75,76,77,80,81,86,97,99,101,106,108,110,122,126,128,129,],[0,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-61,-59,-60,-62,-63,-64,-65,-2,-66,-29,-61,-16,-17,-31,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-18,-19,-20,-58,-33,-22,-28,-38,-21,-23,-27,-39,-32,-30,]),'END':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,19,21,22,23,24,25,26,33,47,48,49,50,51,61,64,65,66,67,68,69,70,71,72,73,74,75,76,77,80,81,86,88,91,97,99,101,106,108,110,114,118,122,124,126,128,129,],[-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-61,-59,-60,-62,-63,-64,-65,-2,-66,-29,-61,-16,-17,-31,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-18,-19,-20,-58,101,106,-33,-22,-28,-38,-21,-23,122,126,-27,128,-39,-32,-30,]),'ELSE':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,19,21,22,23,24,25,26,33,47,48,49,50,51,61,64,65,66,67,68,69,70,71,72,73,74,75,76,77,80,81,86,91,97,99,101,106,108,110,122,126,128,129,],[-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-61,-59,-60,-62,-63,-64,-65,-2,-66,-29,-61,-16,-17,-31,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-18,-19,-20,-58,107,-33,-22,-28,-38,-21,-23,-27,-39,-32,-30,]),'SUMA':([5,11,19,21,22,23,24,25,26,47,48,49,50,51,57,59,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,80,81,84,85,86,93,97,100,121,129,],[34,-29,-61,-59,-60,-62,-63,-64,-65,34,-29,-61,34,34,34,34,34,-45,-46,-47,-48,-49,34,34,34,34,34,34,34,34,34,34,34,34,34,-58,34,-33,34,34,-30,]),'RESTA':([5,11,19,21,22,23,24,25,26,47,48,49,50,51,57,59,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,80,81,84,85,86,93,97,100,121,129,],[35,-29,-61,-59,-60,-62,-63,-64,-65,35,-29,-61,35,35,35,35,35,-45,-46,-47,-48,-49,35,35,35,35,35,35,35,35,35,35,35,35,35,-58,35,-33,35,35,-30,]),'MULT':([5,11,19,21,22,23,24,25,26,47,48,49,50,51,57,59,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,80,81,84,85,86,93,97,100,121,129,],[36,-29,-61,-59,-60,-62,-63,-64,-65,36,-29,-61,36,36,36,36,36,36,36,-47,-48,-49,36,36,36,36,36,36,36,36,36,36,36,36,36,-58,36,-33,36,36,-30,]),'DIV':([5,11,19,21,22,23,24,25,26,47,48,49,50,51,57,59,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,80,81,84,85,86,93,97,100,121,129,],[37,-29,-61,-59,-60,-62,-63,-64,-65,37,-29,-61,37,37,37,37,37,37,37,-47,-48,-49,37,37,37,37,37,37,37,37,37,37,37,37,37,-58,37,-33,37,37,-30,]),'MOD':([5,11,19,21,22,23,24,25,26,47,48,49,50,51,57,59,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,80,81,84,85,86,93,97,100,121,129,],[38,-29,-61,-59,-60,-62,-63,-64,-65,38,-29,-61,38,38,38,38,38,38,38,-47,-48,-49,38,38,38,38,38,38,38,38,38,38,38,38,38,-58,38,-33,38,38,-30,]),'MAYOR':([5,11,19,21,22,23,24,25,26,47,48,49,50,51,57,59,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,80,81,84,85,86,93,97,100,121,129,],[39,-29,-61,-59,-60,-62,-63,-64,-65,39,-29,-61,39,39,39,39,39,-45,-46,-47,-48,-49,-50,-51,-52,-53,39,39,39,39,39,39,39,39,39,-58,39,-33,39,39,-30,]),'MENOR':([5,11,19,21,22,23,24,25,26,47,48,49,50,51,57,59,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,80,81,84,85,86,93,97,100,121,129,],[40,-29,-61,-59,-60,-62,-63,-64,-65,40,-29,-61,40,40,40,40,40,-45,-46,-47,-48,-49,-50,-51,-52,-53,40,40,40,40,40,40,40,40,40,-58,40,-33,40,40,-30,]),'MAYORIGUAL':([5,11,19,21,22,23,24,25,26,47,48,49,50,51,57,59,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,80,81,84,85,86,93,97,100,121,129,],[41,-29,-61,-59,-60,-62,-63,-64,-65,41,-29,-61,41,41,41,41,41,-45,-46,-47,-48,-49,-50,-51,-52,-53,41,41,41,41,41,41,41,41,41,-58,41,-33,41,41,-30,]),'MENORIGUAL':([5,11,19,21,22,23,24,25,26,47,48,49,50,51,57,59,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,80,81,84,85,86,93,97,100,121,129,],[42,-29,-61,-59,-60,-62,-63,-64,-65,42,-29,-61,42,42,42,42,42,-45,-46,-47,-48,-49,-50,-51,-52,-53,42,42,42,42,42,42,42,42,42,-58,42,-33,42,42,-30,]),'IGUALIGUAL':([5,11,19,21,22,23,24,25,26,47,48,49,50,51,57,59,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,80,81,84,85,86,93,97,100,121,129,],[43,-29,-61,-59,-60,-62,-63,-64,-65,43,-29,-61,43,43,43,43,43,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,43,43,43,43,43,43,43,-58,43,-33,43,43,-30,]),'DIFIGUAL':([5,11,19,21,22,23,24,25,26,47,48,49,50,51,57,59,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,80,81,84,85,86,93,97,100,121,129,],[44,-29,-61,-59,-60,-62,-63,-64,-65,44,-29,-61,44,44,44,44,44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,44,44,44,44,44,44,44,-58,44,-33,44,44,-30,]),'ANDAND':([5,11,19,21,22,23,24,25,26,47,48,49,50,51,57,59,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,80,81,84,85,86,93,97,100,121,129,],[45,-29,-61,-59,-60,-62,-63,-64,-65,45,-29,-61,45,45,45,45,45,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,45,45,45,45,45,45,-58,45,-33,45,45,-30,]),'OROR':([5,11,19,21,22,23,24,25,26,47,48,49,50,51,57,59,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,80,81,84,85,86,93,97,100,121,129,],[46,-29,-61,-59,-60,-62,-63,-64,-65,46,-29,-61,46,46,46,46,46,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,46,46,46,46,46,-58,46,-33,46,46,-30,]),'IGUAL':([19,],[52,]),'MASIGUAL':([19,],[53,]),'MENOSIGUAL':([19,],[54,]),'CORCHETE_IZ':([19,52,102,],[56,78,115,]),'PARENTESIS_DER':([21,22,23,24,25,26,48,49,55,57,64,65,66,67,68,69,70,71,72,73,74,75,76,82,83,84,86,97,103,104,105,113,125,127,129,],[-59,-60,-62,-63,-64,-65,-29,-61,-34,86,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,97,-35,-36,-58,-33,-42,116,-40,-37,-41,129,-30,]),'COMA':([21,22,23,24,25,26,48,49,64,65,66,67,68,69,70,71,72,73,74,75,76,84,86,93,95,97,103,105,121,129,],[-59,-60,-62,-63,-64,-65,-29,-61,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,98,-58,109,111,-33,-42,117,-26,-30,]),'CORCHETE_DER':([21,22,23,24,25,26,48,49,64,65,66,67,68,69,70,71,72,73,74,75,76,85,86,92,93,97,119,123,129,],[-59,-60,-62,-63,-64,-65,-29,-61,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,99,-58,108,-43,-33,-44,127,-30,]),'LLAVE_DER':([21,22,23,24,25,26,48,49,64,65,66,67,68,69,70,71,72,73,74,75,76,86,94,95,97,120,121,129,],[-59,-60,-62,-63,-64,-65,-29,-61,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,110,-24,-33,-25,-26,-30,]),'PUNTO':([29,],[60,]),'LLAVE_IZ':([52,],[79,]),'IN':([58,],[87,]),'NEW':([60,],[89,]),'ARROW':([96,],[112,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'cuerpo':([0,2,59,63,100,107,116,],[1,33,88,91,114,118,124,]),'linea':([0,2,59,63,100,107,116,],[2,2,2,2,2,2,2,]),'impresion':([0,2,59,63,100,107,116,],[3,3,3,3,3,3,3,]),'asignacion':([0,2,59,63,100,107,116,],[4,4,4,4,4,4,4,]),'expresion':([0,2,16,17,18,20,28,32,34,35,36,37,38,39,40,41,42,43,44,45,46,52,53,54,55,56,59,63,78,87,98,100,107,109,112,115,116,],[5,5,47,50,51,57,59,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,80,81,84,85,5,5,93,100,84,5,5,93,121,93,5,]),'declaracion_array':([0,2,59,63,100,107,116,],[6,6,6,6,6,6,6,]),'acceso_array':([0,2,59,63,100,107,116,],[7,7,7,7,7,7,7,]),'declaracion_hash':([0,2,59,63,100,107,116,],[8,8,8,8,8,8,8,]),'for_statement':([0,2,59,63,100,107,116,],[9,9,9,9,9,9,9,]),'while_statement':([0,2,59,63,100,107,116,],[10,10,10,10,10,10,10,]),'set_statement':([0,2,16,17,18,20,28,32,34,35,36,37,38,39,40,41,42,43,44,45,46,52,53,54,55,56,59,63,78,87,98,100,107,109,112,115,116,],[11,11,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,11,11,48,48,48,11,11,48,48,48,11,]),'gets':([0,2,59,63,100,107,116,],[12,12,12,12,12,12,12,]),'funcion_definition':([0,2,59,63,100,107,116,],[13,13,13,13,13,13,13,]),'if_statement':([0,2,59,63,100,107,116,],[14,14,14,14,14,14,14,]),'ifelse_statement':([0,2,59,63,100,107,116,],[15,15,15,15,15,15,15,]),'argumentos_opt':([55,],[82,]),'argumentos':([55,98,],[83,113,]),'elementos':([78,109,115,],[92,119,123,]),'pares_hash':([79,111,],[94,120,]),'par_hash':([79,111,],[95,95,]),'parametros':([90,117,],[104,125,]),'parametro':([90,117,],[105,105,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> cuerpo","S'",1,None,None,None),
  ('cuerpo -> linea','cuerpo',1,'p_cuerpo','parser.py',27),
  ('cuerpo -> linea cuerpo','cuerpo',2,'p_cuerpo','parser.py',28),
  ('linea -> impresion','linea',1,'p_linea','parser.py',33),
  ('linea -> asignacion','linea',1,'p_linea','parser.py',34),
  ('linea -> expresion','linea',1,'p_linea','parser.py',35),
  ('linea -> declaracion_array','linea',1,'p_linea','parser.py',36),
  ('linea -> acceso_array','linea',1,'p_linea','parser.py',37),
  ('linea -> declaracion_hash','linea',1,'p_linea','parser.py',38),
  ('linea -> for_statement','linea',1,'p_linea','parser.py',39),
  ('linea -> while_statement','linea',1,'p_linea','parser.py',40),
  ('linea -> set_statement','linea',1,'p_linea','parser.py',41),
  ('linea -> gets','linea',1,'p_linea','parser.py',42),
  ('linea -> funcion_definition','linea',1,'p_linea','parser.py',43),
  ('linea -> if_statement','linea',1,'p_linea','parser.py',44),
  ('linea -> ifelse_statement','linea',1,'p_linea','parser.py',45),
  ('impresion -> PUTS expresion','impresion',2,'p_impresion','parser.py',50),
  ('impresion -> PRINT expresion','impresion',2,'p_impresion','parser.py',51),
  ('asignacion -> ID IGUAL expresion','asignacion',3,'p_asignacion','parser.py',56),
  ('asignacion -> ID MASIGUAL expresion','asignacion',3,'p_asignacion_plusigual','parser.py',60),
  ('asignacion -> ID MENOSIGUAL expresion','asignacion',3,'p_asignacion_menosigual','parser.py',65),
  ('declaracion_array -> ID IGUAL CORCHETE_IZ elementos CORCHETE_DER','declaracion_array',5,'p_declaracion_array','parser.py',69),
  ('acceso_array -> ID CORCHETE_IZ expresion CORCHETE_DER','acceso_array',4,'p_acceso_array','parser.py',74),
  ('declaracion_hash -> ID IGUAL LLAVE_IZ pares_hash LLAVE_DER','declaracion_hash',5,'p_declaracion_hash','parser.py',79),
  ('pares_hash -> par_hash','pares_hash',1,'p_pares_hash','parser.py',84),
  ('pares_hash -> par_hash COMA pares_hash','pares_hash',3,'p_pares_hash','parser.py',85),
  ('par_hash -> STRING ARROW expresion','par_hash',3,'p_par_hash','parser.py',93),
  ('for_statement -> FOR ID IN expresion cuerpo END','for_statement',6,'p_for_statement','parser.py',98),
  ('while_statement -> WHILE expresion cuerpo END','while_statement',4,'p_while_statement','parser.py',103),
  ('expresion -> set_statement','expresion',1,'p_expresion_set','parser.py',109),
  ('set_statement -> SET PUNTO NEW PARENTESIS_IZ CORCHETE_IZ elementos CORCHETE_DER PARENTESIS_DER','set_statement',8,'p_set_statement','parser.py',114),
  ('gets -> GETS ID','gets',2,'p_gets','parser.py',118),
  ('funcion_definition -> DEF ID PARENTESIS_IZ parametros PARENTESIS_DER cuerpo END','funcion_definition',7,'p_funcion_definition','parser.py',123),
  ('expresion -> ID PARENTESIS_IZ argumentos_opt PARENTESIS_DER','expresion',4,'p_expresion_call','parser.py',128),
  ('argumentos_opt -> <empty>','argumentos_opt',0,'p_argumentos_opt','parser.py',132),
  ('argumentos_opt -> argumentos','argumentos_opt',1,'p_argumentos_opt','parser.py',133),
  ('argumentos -> expresion','argumentos',1,'p_argumentos','parser.py',137),
  ('argumentos -> expresion COMA argumentos','argumentos',3,'p_argumentos','parser.py',138),
  ('if_statement -> IF expresion cuerpo END','if_statement',4,'p_if_statement','parser.py',143),
  ('ifelse_statement -> IF expresion cuerpo ELSE cuerpo END','ifelse_statement',6,'p_ifelse_statement','parser.py',148),
  ('parametros -> parametro','parametros',1,'p_parametros','parser.py',153),
  ('parametros -> parametro COMA parametros','parametros',3,'p_parametros','parser.py',154),
  ('parametro -> ID','parametro',1,'p_parametro','parser.py',159),
  ('elementos -> expresion','elementos',1,'p_elementos','parser.py',164),
  ('elementos -> expresion COMA elementos','elementos',3,'p_elementos','parser.py',165),
  ('expresion -> expresion SUMA expresion','expresion',3,'p_expresion_binop','parser.py',170),
  ('expresion -> expresion RESTA expresion','expresion',3,'p_expresion_binop','parser.py',171),
  ('expresion -> expresion MULT expresion','expresion',3,'p_expresion_binop','parser.py',172),
  ('expresion -> expresion DIV expresion','expresion',3,'p_expresion_binop','parser.py',173),
  ('expresion -> expresion MOD expresion','expresion',3,'p_expresion_binop','parser.py',174),
  ('expresion -> expresion MAYOR expresion','expresion',3,'p_expresion_cmp_logica','parser.py',179),
  ('expresion -> expresion MENOR expresion','expresion',3,'p_expresion_cmp_logica','parser.py',180),
  ('expresion -> expresion MAYORIGUAL expresion','expresion',3,'p_expresion_cmp_logica','parser.py',181),
  ('expresion -> expresion MENORIGUAL expresion','expresion',3,'p_expresion_cmp_logica','parser.py',182),
  ('expresion -> expresion IGUALIGUAL expresion','expresion',3,'p_expresion_cmp_logica','parser.py',183),
  ('expresion -> expresion DIFIGUAL expresion','expresion',3,'p_expresion_cmp_logica','parser.py',184),
  ('expresion -> expresion ANDAND expresion','expresion',3,'p_expresion_cmp_logica','parser.py',185),
  ('expresion -> expresion OROR expresion','expresion',3,'p_expresion_cmp_logica','parser.py',186),
  ('expresion -> PARENTESIS_IZ expresion PARENTESIS_DER','expresion',3,'p_expresion_group','parser.py',190),
  ('expresion -> INTEGER','expresion',1,'p_expresion_int','parser.py',195),
  ('expresion -> FLOAT','expresion',1,'p_expresion_float','parser.py',200),
  ('expresion -> ID','expresion',1,'p_expresion_id','parser.py',205),
  ('expresion -> STRING','expresion',1,'p_expresion_string','parser.py',210),
  ('expresion -> BOOLEAN','expresion',1,'p_expresion_boolean','parser.py',215),
  ('expresion -> TRUE','expresion',1,'p_expresion_truefalse','parser.py',220),
  ('expresion -> FALSE','expresion',1,'p_expresion_truefalse','parser.py',221),
  ('linea -> RETURN expresion','linea',2,'p_linea_return','parser.py',225),
]
